diff --git a/dist/index.mjs b/dist/index.mjs
index 0df7008b24a053a8d9dba3c3dcbbf636f2f04576..1544800c7c8bd1beb1183788ebe3e456efac8369 100644
--- a/dist/index.mjs
+++ b/dist/index.mjs
@@ -60,16 +60,16 @@ if (import.meta.hot && !inWebWorker) {
     RefreshRuntime.registerExportsForReactRefresh(__SOURCE__, currentExports);
     import.meta.hot.accept((nextExports) => {
       if (!nextExports) return;
-      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);
+      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports, __SOURCE__);
       if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);
     });
   });
 }`;
 function addRefreshWrapper(code, id) {
-  return sharedHeader + functionHeader.replace("__SOURCE__", JSON.stringify(id)) + code + functionFooter + sharedFooter.replace("__SOURCE__", JSON.stringify(id));
+  return sharedHeader + functionHeader.replace("__SOURCE__", JSON.stringify(id)) + code + functionFooter + sharedFooter.replaceAll("__SOURCE__", JSON.stringify(id));
 }
 function addClassComponentRefreshWrapper(code, id) {
-  return sharedHeader + code + sharedFooter.replace("__SOURCE__", JSON.stringify(id));
+  return sharedHeader + code + sharedFooter.replaceAll("__SOURCE__", JSON.stringify(id));
 }
 
 let babel;
diff --git a/dist/refreshUtils.js b/dist/refreshUtils.js
index 0ca2b011795af51ce50bbf8f7a712c871e065954..09ecc2a04b7ac0acdaa6bfaa70fe0f2a15b060a3 100644
--- a/dist/refreshUtils.js
+++ b/dist/refreshUtils.js
@@ -25,7 +25,7 @@ function registerExportsForReactRefresh(filename, moduleExports) {
   }
 }
 
-function validateRefreshBoundaryAndEnqueueUpdate(prevExports, nextExports) {
+function validateRefreshBoundaryAndEnqueueUpdate(prevExports, nextExports, filename) {
   if (!predicateOnExport(prevExports, (key) => key in nextExports)) {
     return 'Could not Fast Refresh (export removed)'
   }
@@ -39,6 +39,10 @@ function validateRefreshBoundaryAndEnqueueUpdate(prevExports, nextExports) {
     (key, value) => {
       hasExports = true
       if (exports.isLikelyComponentType(value)) return true
+
+      // Allow MDX frontmatter and tableOfContents to change without invalidating the module to allow for fast refresh
+      if (/\.mdx?$/.test(filename) && (key === 'tableOfContents' || key === 'frontmatter')) return true;
+
       return prevExports[key] === nextExports[key]
     },
   )
